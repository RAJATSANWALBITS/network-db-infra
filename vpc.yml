AWSTemplateFormatVersion: 2010-09-09
Description: Template to create a new VPC

Parameters:
  vpcCIDR:
    Type: String
    
Resources:
  salesVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref vpcCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags: 
        - Key: "BU"
          Value: "ERAS"
        - Key: "CostCenter"
          Value: "18654"
        - Key: "Name"
          Value: "salesVPC"
          
          
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Sales-IG
        
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref salesVPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref salesVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name             
          Value: Sales Public Subnet 1
          
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref salesVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name             
          Value: Sales Public Subnet 12

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref salesVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.0.11.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Sales Private Subnet 1
          
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref salesVPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: 10.0.12.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Sales Private Subnet 2  
    
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref salesVPC
      Tags:
        - Key: Name
          Value: Sales VPC Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
      
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
      
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref salesVPC

  PrivateRoute1:            # Private route table can access web via NAT (created below)
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 10.0.0.0/16
      # Route traffic through the NAT Gateway:
      #NatGatewayId: !Ref NATGateway

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  #NATGateway:
    #Type: AWS::EC2::NatGateway
    #Properties:
      #AllocationId: !GetAtt ElasticIPAddress.AllocationId
      #SubnetId: !Ref PublicSubnet1
      
  SalesSSHSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SSH Traffic & TCP Traffic
      GroupName: SalesSSHSecurityGroup
      SecurityGroupIngress:
        - IpProtocol: TCP
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
          
        - IpProtocol: TCP
          FromPort: 1521
          ToPort: '1521'
          CidrIp: 0.0.0.0/0
        - IpProtocol: TCP
          FromPort: 5432
          ToPort: '5432'
          CidrIp: 0.0.0.0/0
      VpcId: !Ref salesVPC
      
      

Outputs:

  PublicSubnet1SubnetId:
    Value: !GetAtt PublicSubnet1.SubnetId
    Export:
      Name: !Join ['', [!Ref "AWS::StackName", "PublicSubnet1Id"]]


  PublicSubnet2SubnetId:
    Value: !GetAtt PublicSubnet2.SubnetId
    Export:
      Name: !Join ['', [!Ref "AWS::StackName", "PublicSubnet2Id"]]

  PrivateSubnet1SubnetId:
    Value: !GetAtt PrivateSubnet1.SubnetId
    Export:
      Name: !Join ['', [!Ref "AWS::StackName", "PrivateSubnet1Id"]]


  PrivateSubnet2SubnetId:
    Value: !GetAtt PrivateSubnet2.SubnetId
    Export:
      Name: !Join ['', [!Ref "AWS::StackName", "PrivateSubnet2Id"]]
      
  SecurityGroupName:
    Value: !GetAtt SalesSSHSecurityGroup.GroupId
    Export:
      Name: !Join ['', [!Ref "AWS::StackName", "SalesSSHSecurityGroup"]]
